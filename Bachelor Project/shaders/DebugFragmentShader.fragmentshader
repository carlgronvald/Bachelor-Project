#version 330 core

layout(location=0) out vec4 color;

uniform sampler2D tex;

in vec2 UV;

float near = 0.1; 
float far  = 100.0; 
  
float LinearizeDepth(float depth) 
{
    float z = depth * 2.0 - 1.0; // back to NDC 
    return (2.0 * near * far) / (far + near - z * (far - near));	
}

float camera(vec4 tex) {
	return dot(tex, vec4(1,256,65536,16777216))/16777216.0 * (1);
}
void main() {
	//color = vec4(vec3(camera(texture(tex, UV))),1);
	//float depth = LinearizeDepth(texture(tex,UV).x)/10;
	//color = vec4(vec3(depth),1.0);
	color = texture(tex,UV)*texture(tex,UV).w;
	//color = vec4(texture(tex,UV).xyz*texture(tex,UV).w,1.0);
	//color = vec4(UV.xy,1,1)+texture(tex,UV);
}