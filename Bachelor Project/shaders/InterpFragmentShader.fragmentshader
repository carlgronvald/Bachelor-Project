#version 330 core

in vec2 UV;
in vec3 vColor;
in mat2 dUV;
in vec2 vertexxy;

uniform sampler2D depthTexture;
uniform sampler2D externalTexture;

out vec3 color;

float near = 0.1; 
float far  = 100.0; 
  
float LinearizeDepth(float depth) 
{
    float z = depth * 2.0 - 1.0; // back to NDC 
    return (2.0 * near * far) / (far + near - z * (far - near));	
}

void main() {
	vec2 screenxy = vec2(gl_FragCoord.x/640, gl_FragCoord.y/480); //Fragment xy
	
	float d = LinearizeDepth(texture(depthTexture,screenxy).x);
	
	color = texture(externalTexture, dUV*(screenxy-vertexxy)+UV).xyz;
	
}
//