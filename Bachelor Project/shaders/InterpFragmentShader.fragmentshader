#version 330 core

in vec2 UV;
in vec3 vColor;
in mat2 dUV;
in vec2 vertexxy;

uniform sampler2D depthTexture;
uniform sampler2D externalTexture;

out vec3 color;

float near = 0.1; 
float far  = 100.0; 
  
float LinearizeDepth(float depth) 
{
    float z = depth * 2.0 - 1.0; // back to NDC 
    return (2.0 * near * far) / (far + near - z * (far - near));	
}

void main() {
	vec2 screenxy = vec2(gl_FragCoord.x/640, gl_FragCoord.y/480); //Fragment xy
	
	float d = LinearizeDepth(texture(depthTexture,screenxy).x);
	

	//color = vColor;
	//color = vec3(mod(UV.x,1),mod(UV.y,1),1.0);
	
	//color = vec3((screenxy-vertexxy)*10,0);
	
	color = texture(externalTexture, dUV*(screenxy-vertexxy)+UV).xyz;

	//color = texture(externalTexture, vec2(mod(UV.x,1),mod(UV.y,1))).xyz;
	//color = vec3(mod(gl_FragCoord.x/320,1), mod(gl_FragCoord.y/240,1),1);
	//color =  (1-d)*vColor;// + vec3(0.5,0.5,0.5);
	//color = texture(depthTexture, UV*2-vec2(1)).xyz;
	//f/loat depth = LinearizeDepth(gl_FragCoord.z)/far;
	//color = vec3(depth);
}
//