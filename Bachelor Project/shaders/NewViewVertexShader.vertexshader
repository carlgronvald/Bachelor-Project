#version 330 core

#define VIEWNUM 10

layout(location=0) in vec3 vertexPosition_modelspace;
layout(location=1) in vec3 color;

out vec3 vColor;
out vec2 vertexxy;
out vec3 vertexnormal;
out float vertexz;
out float vertexw;
out float angles[VIEWNUM];

//Uniforms needed for determining angles.
uniform mat4 MVP;
uniform mat4 viewMVP[VIEWNUM];
uniform vec3 viewDir[VIEWNUM];
uniform vec3 viewLoc[VIEWNUM];
uniform vec3 camLoc;
uniform vec3 camDir;


void main() {
	gl_Position = MVP * vec4(vertexPosition_modelspace, 1);
	vertexnormal = normal;


	vec2 pos = (gl_Position.xy/gl_Position.w); //This is the screen position in the [-1,1] square.
	vec4 viewPos;
	for(int i=0;i<VIEWNUM;i++) {
		angles[i] = acos(dot(viewDir[i], camDir));
	}
	vertexxy = (pos+vec2(1))/2;
	vertexz = gl_Position.z;
	vertexw = gl_Position.w;

	vColor = color;
}
