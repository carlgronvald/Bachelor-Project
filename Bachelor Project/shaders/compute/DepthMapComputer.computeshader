#version 430
layout(local_size_x = 1, local_size_y=1) in;
layout(rgba32f, binding=0) uniform image2D img_output;
uniform readonly image2D fromTex;
uniform mat3 convolutionMatrix;

void main() {
	ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
	vec4 tl = imageLoad(fromTex, pixelCoords+ivec2(-1,1));
	vec4 t = imageLoad(fromTex, pixelCoords+ivec2(0,1));
	vec4 tr = imageLoad(fromTex, pixelCoords+ivec2(1,1));
	vec4 cl = imageLoad(fromTex, pixelCoords+ivec2(-1,0));
	vec4 c = imageLoad(fromTex, pixel_coords);
	vec4 cr = imageLoad(fromTex, pixelCoords+ivec2(1,0));
	vec4 bl = imageLoad(fromTex, pixelCoords+ivec2(-1,-1));
	vec4 b = imageLoad(fromTex, pixelCoords+ivec2(0,-1));
	vec4 br = imageLoad(fromTex, pixelCoords+ivec2(1,-1));

	vec4 res = tl*convolutionMatrix[0][0] + t*convolutionMatrix[0][1] + tr*convolutionMatrix[0][2]
		+ cl*convolutionMatrix[1][0] + c*convolutionMatrix[1][1] + cr*convolutionMatrix[1][2]
		+ bl*convolutionMatrix[2][0] + b*convolutionMatrix[2][1] + br*convolutionMatrix[2][2];


	imageStore(img_output, pixel_coords, res);
}